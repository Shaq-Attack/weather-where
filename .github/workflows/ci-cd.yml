name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, Improve_entire_app_to_look_more_professional ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      env:
        TELERIK_LICENSE: ${{ secrets.TELERIK_LICENSE }}
    
    - name: Type check
      run: pnpm type-check
    
    - name: Lint
      run: pnpm lint
    
    - name: Run unit tests
      run: pnpm test:ci
      env:
        NODE_ENV: test
    
    - name: Build application
      run: pnpm build

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      env:
        TELERIK_LICENSE: ${{ secrets.TELERIK_LICENSE }}
    
    - name: Build application
      run: pnpm build
      env:
        VITE_OPENWEATHER_API_KEY: ${{ secrets.VITE_OPENWEATHER_API_KEY }}
    
    - name: Deploy to Vercel
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
